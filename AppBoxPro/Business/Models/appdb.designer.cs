//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Depts_dbo_Depts_ParentID", "Depts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.Dept), "Depts1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Dept), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Users_dbo_Depts_DeptID", "Depts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.Dept), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.User), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Images_dbo_Reimbursements_reimbursement_ID", "Reimbursements", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.Reimbursement), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Image), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Menus_dbo_Menus_ParentID", "Menus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.Menu), "Menus1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Menu), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Menus_dbo_Powers_ViewPowerID", "Powers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.Power), "Menus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Menu), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Onlines_dbo_Users_UserID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(appdb.User), "Onlines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Online), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_PO_Item_dbo_POes_PO_ID", "POes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.PO), "PO_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.PO_Item), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_PO_Item_dbo_Productions_production_ID", "Productions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.Production), "PO_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.PO_Item), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_POes_dbo_Providers_provider_ID", "Providers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.Provider), "POes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.PO), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Production_change_dbo_Productions_production_ID", "Productions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.Production), "Production_change", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Production_change), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_ReimburseClasses_dbo_ReimburseClasses_Parent_ID", "ReimburseClasses", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.ReimburseClass), "ReimburseClasses1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.ReimburseClass), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Reimbursements_dbo_ReimburseSummaries_ReimburseSummary_ID", "ReimburseSummaries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.ReimburseSummary), "Reimbursements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Reimbursement), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Reimbursements_dbo_TelenClients_telenClient_ID", "TelenClients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.TelenClient), "Reimbursements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Reimbursement), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_Reimbursements_dbo_Users_user_ID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.User), "Reimbursements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Reimbursement), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_ReimburseSummaries_dbo_Users_user_ID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.User), "ReimburseSummaries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.ReimburseSummary), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_TerminalLists_dbo_Terminals_terminal_ID", "Terminals", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.Terminal), "TerminalLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.TerminalList), true)]
[assembly: EdmRelationshipAttribute("appdb", "FK_dbo_TerminalProcessRecs_dbo_TerminalLists_TerminalList_ID", "TerminalLists", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(appdb.TerminalList), "TerminalProcessRecs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.TerminalProcessRec), true)]
[assembly: EdmRelationshipAttribute("appdb", "RolePowers", "Powers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Power), "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Role))]
[assembly: EdmRelationshipAttribute("appdb", "RoleUsers", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Role), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.User))]
[assembly: EdmRelationshipAttribute("appdb", "TitleUsers", "Titles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.Title), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(appdb.User))]

#endregion

namespace appdb
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class appdbEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“appdbEntities”部分中的连接字符串初始化新 appdbEntities 对象。
        /// </summary>
        public appdbEntities() : base("name=appdbEntities", "appdbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 appdbEntities 对象。
        /// </summary>
        public appdbEntities(string connectionString) : base(connectionString, "appdbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 appdbEntities 对象。
        /// </summary>
        public appdbEntities(EntityConnection connection) : base(connection, "appdbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<C__MigrationHistory> C__MigrationHistory
        {
            get
            {
                if ((_C__MigrationHistory == null))
                {
                    _C__MigrationHistory = base.CreateObjectSet<C__MigrationHistory>("C__MigrationHistory");
                }
                return _C__MigrationHistory;
            }
        }
        private ObjectSet<C__MigrationHistory> _C__MigrationHistory;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Config> Configs
        {
            get
            {
                if ((_Configs == null))
                {
                    _Configs = base.CreateObjectSet<Config>("Configs");
                }
                return _Configs;
            }
        }
        private ObjectSet<Config> _Configs;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Dept> Depts
        {
            get
            {
                if ((_Depts == null))
                {
                    _Depts = base.CreateObjectSet<Dept>("Depts");
                }
                return _Depts;
            }
        }
        private ObjectSet<Dept> _Depts;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Menu> Menus
        {
            get
            {
                if ((_Menus == null))
                {
                    _Menus = base.CreateObjectSet<Menu>("Menus");
                }
                return _Menus;
            }
        }
        private ObjectSet<Menu> _Menus;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Online> Onlines
        {
            get
            {
                if ((_Onlines == null))
                {
                    _Onlines = base.CreateObjectSet<Online>("Onlines");
                }
                return _Onlines;
            }
        }
        private ObjectSet<Online> _Onlines;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<pchao> pchaos
        {
            get
            {
                if ((_pchaos == null))
                {
                    _pchaos = base.CreateObjectSet<pchao>("pchaos");
                }
                return _pchaos;
            }
        }
        private ObjectSet<pchao> _pchaos;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PO_Item> PO_Item
        {
            get
            {
                if ((_PO_Item == null))
                {
                    _PO_Item = base.CreateObjectSet<PO_Item>("PO_Item");
                }
                return _PO_Item;
            }
        }
        private ObjectSet<PO_Item> _PO_Item;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PO> POes
        {
            get
            {
                if ((_POes == null))
                {
                    _POes = base.CreateObjectSet<PO>("POes");
                }
                return _POes;
            }
        }
        private ObjectSet<PO> _POes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Power> Powers
        {
            get
            {
                if ((_Powers == null))
                {
                    _Powers = base.CreateObjectSet<Power>("Powers");
                }
                return _Powers;
            }
        }
        private ObjectSet<Power> _Powers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Production_change> Production_change
        {
            get
            {
                if ((_Production_change == null))
                {
                    _Production_change = base.CreateObjectSet<Production_change>("Production_change");
                }
                return _Production_change;
            }
        }
        private ObjectSet<Production_change> _Production_change;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Production> Productions
        {
            get
            {
                if ((_Productions == null))
                {
                    _Productions = base.CreateObjectSet<Production>("Productions");
                }
                return _Productions;
            }
        }
        private ObjectSet<Production> _Productions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Provider> Providers
        {
            get
            {
                if ((_Providers == null))
                {
                    _Providers = base.CreateObjectSet<Provider>("Providers");
                }
                return _Providers;
            }
        }
        private ObjectSet<Provider> _Providers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ReimburseClass> ReimburseClasses
        {
            get
            {
                if ((_ReimburseClasses == null))
                {
                    _ReimburseClasses = base.CreateObjectSet<ReimburseClass>("ReimburseClasses");
                }
                return _ReimburseClasses;
            }
        }
        private ObjectSet<ReimburseClass> _ReimburseClasses;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Reimbursement> Reimbursements
        {
            get
            {
                if ((_Reimbursements == null))
                {
                    _Reimbursements = base.CreateObjectSet<Reimbursement>("Reimbursements");
                }
                return _Reimbursements;
            }
        }
        private ObjectSet<Reimbursement> _Reimbursements;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ReimburseSummary> ReimburseSummaries
        {
            get
            {
                if ((_ReimburseSummaries == null))
                {
                    _ReimburseSummaries = base.CreateObjectSet<ReimburseSummary>("ReimburseSummaries");
                }
                return _ReimburseSummaries;
            }
        }
        private ObjectSet<ReimburseSummary> _ReimburseSummaries;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TelenClient> TelenClients
        {
            get
            {
                if ((_TelenClients == null))
                {
                    _TelenClients = base.CreateObjectSet<TelenClient>("TelenClients");
                }
                return _TelenClients;
            }
        }
        private ObjectSet<TelenClient> _TelenClients;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TerminalList> TerminalLists
        {
            get
            {
                if ((_TerminalLists == null))
                {
                    _TerminalLists = base.CreateObjectSet<TerminalList>("TerminalLists");
                }
                return _TerminalLists;
            }
        }
        private ObjectSet<TerminalList> _TerminalLists;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TerminalProcessRec> TerminalProcessRecs
        {
            get
            {
                if ((_TerminalProcessRecs == null))
                {
                    _TerminalProcessRecs = base.CreateObjectSet<TerminalProcessRec>("TerminalProcessRecs");
                }
                return _TerminalProcessRecs;
            }
        }
        private ObjectSet<TerminalProcessRec> _TerminalProcessRecs;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Terminal> Terminals
        {
            get
            {
                if ((_Terminals == null))
                {
                    _Terminals = base.CreateObjectSet<Terminal>("Terminals");
                }
                return _Terminals;
            }
        }
        private ObjectSet<Terminal> _Terminals;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<YW_Lableinfor> YW_Lableinfor
        {
            get
            {
                if ((_YW_Lableinfor == null))
                {
                    _YW_Lableinfor = base.CreateObjectSet<YW_Lableinfor>("YW_Lableinfor");
                }
                return _YW_Lableinfor;
            }
        }
        private ObjectSet<YW_Lableinfor> _YW_Lableinfor;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<YW_ProcessRec> YW_ProcessRec
        {
            get
            {
                if ((_YW_ProcessRec == null))
                {
                    _YW_ProcessRec = base.CreateObjectSet<YW_ProcessRec>("YW_ProcessRec");
                }
                return _YW_ProcessRec;
            }
        }
        private ObjectSet<YW_ProcessRec> _YW_ProcessRec;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 C__MigrationHistory EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToC__MigrationHistory(C__MigrationHistory c__MigrationHistory)
        {
            base.AddObject("C__MigrationHistory", c__MigrationHistory);
        }
    
        /// <summary>
        /// 用于向 Configs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToConfigs(Config config)
        {
            base.AddObject("Configs", config);
        }
    
        /// <summary>
        /// 用于向 Depts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDepts(Dept dept)
        {
            base.AddObject("Depts", dept);
        }
    
        /// <summary>
        /// 用于向 Images EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// 用于向 Logs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// 用于向 Menus EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMenus(Menu menu)
        {
            base.AddObject("Menus", menu);
        }
    
        /// <summary>
        /// 用于向 Onlines EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOnlines(Online online)
        {
            base.AddObject("Onlines", online);
        }
    
        /// <summary>
        /// 用于向 pchaos EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTopchaos(pchao pchao)
        {
            base.AddObject("pchaos", pchao);
        }
    
        /// <summary>
        /// 用于向 PO_Item EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPO_Item(PO_Item pO_Item)
        {
            base.AddObject("PO_Item", pO_Item);
        }
    
        /// <summary>
        /// 用于向 POes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPOes(PO pO)
        {
            base.AddObject("POes", pO);
        }
    
        /// <summary>
        /// 用于向 Powers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPowers(Power power)
        {
            base.AddObject("Powers", power);
        }
    
        /// <summary>
        /// 用于向 Production_change EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToProduction_change(Production_change production_change)
        {
            base.AddObject("Production_change", production_change);
        }
    
        /// <summary>
        /// 用于向 Productions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToProductions(Production production)
        {
            base.AddObject("Productions", production);
        }
    
        /// <summary>
        /// 用于向 Providers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToProviders(Provider provider)
        {
            base.AddObject("Providers", provider);
        }
    
        /// <summary>
        /// 用于向 ReimburseClasses EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReimburseClasses(ReimburseClass reimburseClass)
        {
            base.AddObject("ReimburseClasses", reimburseClass);
        }
    
        /// <summary>
        /// 用于向 Reimbursements EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReimbursements(Reimbursement reimbursement)
        {
            base.AddObject("Reimbursements", reimbursement);
        }
    
        /// <summary>
        /// 用于向 ReimburseSummaries EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReimburseSummaries(ReimburseSummary reimburseSummary)
        {
            base.AddObject("ReimburseSummaries", reimburseSummary);
        }
    
        /// <summary>
        /// 用于向 Roles EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// 用于向 TelenClients EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTelenClients(TelenClient telenClient)
        {
            base.AddObject("TelenClients", telenClient);
        }
    
        /// <summary>
        /// 用于向 TerminalLists EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTerminalLists(TerminalList terminalList)
        {
            base.AddObject("TerminalLists", terminalList);
        }
    
        /// <summary>
        /// 用于向 TerminalProcessRecs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTerminalProcessRecs(TerminalProcessRec terminalProcessRec)
        {
            base.AddObject("TerminalProcessRecs", terminalProcessRec);
        }
    
        /// <summary>
        /// 用于向 Terminals EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTerminals(Terminal terminal)
        {
            base.AddObject("Terminals", terminal);
        }
    
        /// <summary>
        /// 用于向 Titles EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// 用于向 YW_Lableinfor EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToYW_Lableinfor(YW_Lableinfor yW_Lableinfor)
        {
            base.AddObject("YW_Lableinfor", yW_Lableinfor);
        }
    
        /// <summary>
        /// 用于向 YW_ProcessRec EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToYW_ProcessRec(YW_ProcessRec yW_ProcessRec)
        {
            base.AddObject("YW_ProcessRec", yW_ProcessRec);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="C__MigrationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__MigrationHistory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 C__MigrationHistory 对象。
        /// </summary>
        /// <param name="migrationId">MigrationId 属性的初始值。</param>
        /// <param name="contextKey">ContextKey 属性的初始值。</param>
        /// <param name="model">Model 属性的初始值。</param>
        /// <param name="productVersion">ProductVersion 属性的初始值。</param>
        public static C__MigrationHistory CreateC__MigrationHistory(global::System.String migrationId, global::System.String contextKey, global::System.Byte[] model, global::System.String productVersion)
        {
            C__MigrationHistory c__MigrationHistory = new C__MigrationHistory();
            c__MigrationHistory.MigrationId = migrationId;
            c__MigrationHistory.ContextKey = contextKey;
            c__MigrationHistory.Model = model;
            c__MigrationHistory.ProductVersion = productVersion;
            return c__MigrationHistory;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MigrationId
        {
            get
            {
                return _MigrationId;
            }
            set
            {
                if (_MigrationId != value)
                {
                    OnMigrationIdChanging(value);
                    ReportPropertyChanging("MigrationId");
                    _MigrationId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MigrationId");
                    OnMigrationIdChanged();
                }
            }
        }
        private global::System.String _MigrationId;
        partial void OnMigrationIdChanging(global::System.String value);
        partial void OnMigrationIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContextKey
        {
            get
            {
                return _ContextKey;
            }
            set
            {
                if (_ContextKey != value)
                {
                    OnContextKeyChanging(value);
                    ReportPropertyChanging("ContextKey");
                    _ContextKey = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ContextKey");
                    OnContextKeyChanged();
                }
            }
        }
        private global::System.String _ContextKey;
        partial void OnContextKeyChanging(global::System.String value);
        partial void OnContextKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Model
        {
            get
            {
                return StructuralObject.GetValidValue(_Model);
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.Byte[] _Model;
        partial void OnModelChanging(global::System.Byte[] value);
        partial void OnModelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Config")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Config : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Config 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="configKey">ConfigKey 属性的初始值。</param>
        /// <param name="configValue">ConfigValue 属性的初始值。</param>
        public static Config CreateConfig(global::System.Int32 id, global::System.String configKey, global::System.String configValue)
        {
            Config config = new Config();
            config.ID = id;
            config.ConfigKey = configKey;
            config.ConfigValue = configValue;
            return config;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConfigKey
        {
            get
            {
                return _ConfigKey;
            }
            set
            {
                OnConfigKeyChanging(value);
                ReportPropertyChanging("ConfigKey");
                _ConfigKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConfigKey");
                OnConfigKeyChanged();
            }
        }
        private global::System.String _ConfigKey;
        partial void OnConfigKeyChanging(global::System.String value);
        partial void OnConfigKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConfigValue
        {
            get
            {
                return _ConfigValue;
            }
            set
            {
                OnConfigValueChanging(value);
                ReportPropertyChanging("ConfigValue");
                _ConfigValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConfigValue");
                OnConfigValueChanged();
            }
        }
        private global::System.String _ConfigValue;
        partial void OnConfigValueChanging(global::System.String value);
        partial void OnConfigValueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Dept")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dept : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Dept 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="sortIndex">SortIndex 属性的初始值。</param>
        public static Dept CreateDept(global::System.Int32 id, global::System.String name, global::System.Int32 sortIndex)
        {
            Dept dept = new Dept();
            dept.ID = id;
            dept.Name = name;
            dept.SortIndex = sortIndex;
            return dept;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortIndex
        {
            get
            {
                return _SortIndex;
            }
            set
            {
                OnSortIndexChanging(value);
                ReportPropertyChanging("SortIndex");
                _SortIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortIndex");
                OnSortIndexChanged();
            }
        }
        private global::System.Int32 _SortIndex;
        partial void OnSortIndexChanging(global::System.Int32 value);
        partial void OnSortIndexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Depts_dbo_Depts_ParentID", "Depts1")]
        public EntityCollection<Dept> Depts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dept>("appdb.FK_dbo_Depts_dbo_Depts_ParentID", "Depts1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dept>("appdb.FK_dbo_Depts_dbo_Depts_ParentID", "Depts1", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Depts_dbo_Depts_ParentID", "Depts")]
        public Dept Dept1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("appdb.FK_dbo_Depts_dbo_Depts_ParentID", "Depts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("appdb.FK_dbo_Depts_dbo_Depts_ParentID", "Depts").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dept> Dept1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("appdb.FK_dbo_Depts_dbo_Depts_ParentID", "Depts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dept>("appdb.FK_dbo_Depts_dbo_Depts_ParentID", "Depts", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Users_dbo_Depts_DeptID", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("appdb.FK_dbo_Users_dbo_Depts_DeptID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("appdb.FK_dbo_Users_dbo_Depts_DeptID", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Image 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static Image CreateImage(global::System.Int32 id)
        {
            Image image = new Image();
            image.ID = id;
            return image;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> reimbursement_ID
        {
            get
            {
                return _reimbursement_ID;
            }
            set
            {
                Onreimbursement_IDChanging(value);
                ReportPropertyChanging("reimbursement_ID");
                _reimbursement_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("reimbursement_ID");
                Onreimbursement_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _reimbursement_ID;
        partial void Onreimbursement_IDChanging(Nullable<global::System.Int32> value);
        partial void Onreimbursement_IDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Images_dbo_Reimbursements_reimbursement_ID", "Reimbursements")]
        public Reimbursement Reimbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reimbursement>("appdb.FK_dbo_Images_dbo_Reimbursements_reimbursement_ID", "Reimbursements").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reimbursement>("appdb.FK_dbo_Images_dbo_Reimbursements_reimbursement_ID", "Reimbursements").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reimbursement> ReimbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reimbursement>("appdb.FK_dbo_Images_dbo_Reimbursements_reimbursement_ID", "Reimbursements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reimbursement>("appdb.FK_dbo_Images_dbo_Reimbursements_reimbursement_ID", "Reimbursements", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Log 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="logTime">LogTime 属性的初始值。</param>
        public static Log CreateLog(global::System.Int32 id, global::System.DateTime logTime)
        {
            Log log = new Log();
            log.ID = id;
            log.LogTime = logTime;
            return log;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Logger
        {
            get
            {
                return _Logger;
            }
            set
            {
                OnLoggerChanging(value);
                ReportPropertyChanging("Logger");
                _Logger = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logger");
                OnLoggerChanged();
            }
        }
        private global::System.String _Logger;
        partial void OnLoggerChanging(global::System.String value);
        partial void OnLoggerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LogTime
        {
            get
            {
                return _LogTime;
            }
            set
            {
                OnLogTimeChanging(value);
                ReportPropertyChanging("LogTime");
                _LogTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogTime");
                OnLogTimeChanged();
            }
        }
        private global::System.DateTime _LogTime;
        partial void OnLogTimeChanging(global::System.DateTime value);
        partial void OnLogTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Menu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menu : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Menu 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="sortIndex">SortIndex 属性的初始值。</param>
        public static Menu CreateMenu(global::System.Int32 id, global::System.String name, global::System.Int32 sortIndex)
        {
            Menu menu = new Menu();
            menu.ID = id;
            menu.Name = name;
            menu.SortIndex = sortIndex;
            return menu;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NavigateUrl
        {
            get
            {
                return _NavigateUrl;
            }
            set
            {
                OnNavigateUrlChanging(value);
                ReportPropertyChanging("NavigateUrl");
                _NavigateUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NavigateUrl");
                OnNavigateUrlChanged();
            }
        }
        private global::System.String _NavigateUrl;
        partial void OnNavigateUrlChanging(global::System.String value);
        partial void OnNavigateUrlChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortIndex
        {
            get
            {
                return _SortIndex;
            }
            set
            {
                OnSortIndexChanging(value);
                ReportPropertyChanging("SortIndex");
                _SortIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortIndex");
                OnSortIndexChanged();
            }
        }
        private global::System.Int32 _SortIndex;
        partial void OnSortIndexChanging(global::System.Int32 value);
        partial void OnSortIndexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewPowerID
        {
            get
            {
                return _ViewPowerID;
            }
            set
            {
                OnViewPowerIDChanging(value);
                ReportPropertyChanging("ViewPowerID");
                _ViewPowerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewPowerID");
                OnViewPowerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewPowerID;
        partial void OnViewPowerIDChanging(Nullable<global::System.Int32> value);
        partial void OnViewPowerIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Menus_dbo_Menus_ParentID", "Menus1")]
        public EntityCollection<Menu> Menus1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Menu>("appdb.FK_dbo_Menus_dbo_Menus_ParentID", "Menus1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Menu>("appdb.FK_dbo_Menus_dbo_Menus_ParentID", "Menus1", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Menus_dbo_Menus_ParentID", "Menus")]
        public Menu Menu1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("appdb.FK_dbo_Menus_dbo_Menus_ParentID", "Menus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("appdb.FK_dbo_Menus_dbo_Menus_ParentID", "Menus").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Menu> Menu1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("appdb.FK_dbo_Menus_dbo_Menus_ParentID", "Menus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Menu>("appdb.FK_dbo_Menus_dbo_Menus_ParentID", "Menus", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Menus_dbo_Powers_ViewPowerID", "Powers")]
        public Power Power
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Power>("appdb.FK_dbo_Menus_dbo_Powers_ViewPowerID", "Powers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Power>("appdb.FK_dbo_Menus_dbo_Powers_ViewPowerID", "Powers").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Power> PowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Power>("appdb.FK_dbo_Menus_dbo_Powers_ViewPowerID", "Powers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Power>("appdb.FK_dbo_Menus_dbo_Powers_ViewPowerID", "Powers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Online")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Online : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Online 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="loginTime">LoginTime 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        public static Online CreateOnline(global::System.Int32 id, global::System.DateTime loginTime, global::System.Int32 userID)
        {
            Online online = new Online();
            online.ID = id;
            online.LoginTime = loginTime;
            online.UserID = userID;
            return online;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IPAdddress
        {
            get
            {
                return _IPAdddress;
            }
            set
            {
                OnIPAdddressChanging(value);
                ReportPropertyChanging("IPAdddress");
                _IPAdddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IPAdddress");
                OnIPAdddressChanged();
            }
        }
        private global::System.String _IPAdddress;
        partial void OnIPAdddressChanging(global::System.String value);
        partial void OnIPAdddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private global::System.DateTime _LoginTime;
        partial void OnLoginTimeChanging(global::System.DateTime value);
        partial void OnLoginTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Onlines_dbo_Users_UserID", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("appdb.FK_dbo_Onlines_dbo_Users_UserID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("appdb.FK_dbo_Onlines_dbo_Users_UserID", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("appdb.FK_dbo_Onlines_dbo_Users_UserID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("appdb.FK_dbo_Onlines_dbo_Users_UserID", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="pchao")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class pchao : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 pchao 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static pchao Createpchao(global::System.Int32 id)
        {
            pchao pchao = new pchao();
            pchao.id = id;
            return pchao;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lotno
        {
            get
            {
                return _lotno;
            }
            set
            {
                OnlotnoChanging(value);
                ReportPropertyChanging("lotno");
                _lotno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lotno");
                OnlotnoChanged();
            }
        }
        private global::System.String _lotno;
        partial void OnlotnoChanging(global::System.String value);
        partial void OnlotnoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String oper
        {
            get
            {
                return _oper;
            }
            set
            {
                OnoperChanging(value);
                ReportPropertyChanging("oper");
                _oper = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("oper");
                OnoperChanged();
            }
        }
        private global::System.String _oper;
        partial void OnoperChanging(global::System.String value);
        partial void OnoperChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> flag
        {
            get
            {
                return _flag;
            }
            set
            {
                OnflagChanging(value);
                ReportPropertyChanging("flag");
                _flag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("flag");
                OnflagChanged();
            }
        }
        private Nullable<global::System.Int32> _flag;
        partial void OnflagChanging(Nullable<global::System.Int32> value);
        partial void OnflagChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="PO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PO 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="deliveryDate">deliveryDate 属性的初始值。</param>
        /// <param name="hasInvoice">hasInvoice 属性的初始值。</param>
        /// <param name="optDate">optDate 属性的初始值。</param>
        public static PO CreatePO(global::System.Int32 id, global::System.DateTime deliveryDate, global::System.Boolean hasInvoice, global::System.DateTime optDate)
        {
            PO pO = new PO();
            pO.ID = id;
            pO.deliveryDate = deliveryDate;
            pO.hasInvoice = hasInvoice;
            pO.optDate = optDate;
            return pO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prosn
        {
            get
            {
                return _prosn;
            }
            set
            {
                OnprosnChanging(value);
                ReportPropertyChanging("prosn");
                _prosn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prosn");
                OnprosnChanged();
            }
        }
        private global::System.String _prosn;
        partial void OnprosnChanging(global::System.String value);
        partial void OnprosnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime deliveryDate
        {
            get
            {
                return _deliveryDate;
            }
            set
            {
                OndeliveryDateChanging(value);
                ReportPropertyChanging("deliveryDate");
                _deliveryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deliveryDate");
                OndeliveryDateChanged();
            }
        }
        private global::System.DateTime _deliveryDate;
        partial void OndeliveryDateChanging(global::System.DateTime value);
        partial void OndeliveryDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean hasInvoice
        {
            get
            {
                return _hasInvoice;
            }
            set
            {
                OnhasInvoiceChanging(value);
                ReportPropertyChanging("hasInvoice");
                _hasInvoice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hasInvoice");
                OnhasInvoiceChanged();
            }
        }
        private global::System.Boolean _hasInvoice;
        partial void OnhasInvoiceChanging(global::System.Boolean value);
        partial void OnhasInvoiceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> provider_ID
        {
            get
            {
                return _provider_ID;
            }
            set
            {
                Onprovider_IDChanging(value);
                ReportPropertyChanging("provider_ID");
                _provider_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("provider_ID");
                Onprovider_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _provider_ID;
        partial void Onprovider_IDChanging(Nullable<global::System.Int32> value);
        partial void Onprovider_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime optDate
        {
            get
            {
                return _optDate;
            }
            set
            {
                OnoptDateChanging(value);
                ReportPropertyChanging("optDate");
                _optDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("optDate");
                OnoptDateChanged();
            }
        }
        private global::System.DateTime _optDate;
        partial void OnoptDateChanging(global::System.DateTime value);
        partial void OnoptDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark
        {
            get
            {
                return _remark;
            }
            set
            {
                OnremarkChanging(value);
                ReportPropertyChanging("remark");
                _remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark");
                OnremarkChanged();
            }
        }
        private global::System.String _remark;
        partial void OnremarkChanging(global::System.String value);
        partial void OnremarkChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_PO_Item_dbo_POes_PO_ID", "PO_Item")]
        public EntityCollection<PO_Item> PO_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PO_Item>("appdb.FK_dbo_PO_Item_dbo_POes_PO_ID", "PO_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PO_Item>("appdb.FK_dbo_PO_Item_dbo_POes_PO_ID", "PO_Item", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_POes_dbo_Providers_provider_ID", "Providers")]
        public Provider Provider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("appdb.FK_dbo_POes_dbo_Providers_provider_ID", "Providers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("appdb.FK_dbo_POes_dbo_Providers_provider_ID", "Providers").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Provider> ProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("appdb.FK_dbo_POes_dbo_Providers_provider_ID", "Providers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Provider>("appdb.FK_dbo_POes_dbo_Providers_provider_ID", "Providers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="PO_Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PO_Item : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PO_Item 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="count">count 属性的初始值。</param>
        /// <param name="price">price 属性的初始值。</param>
        public static PO_Item CreatePO_Item(global::System.Int32 id, global::System.Decimal count, global::System.Decimal price)
        {
            PO_Item pO_Item = new PO_Item();
            pO_Item.ID = id;
            pO_Item.count = count;
            pO_Item.price = price;
            return pO_Item;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal count
        {
            get
            {
                return _count;
            }
            set
            {
                OncountChanging(value);
                ReportPropertyChanging("count");
                _count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("count");
                OncountChanged();
            }
        }
        private global::System.Decimal _count;
        partial void OncountChanging(global::System.Decimal value);
        partial void OncountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Decimal _price;
        partial void OnpriceChanging(global::System.Decimal value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PO_ID
        {
            get
            {
                return _PO_ID;
            }
            set
            {
                OnPO_IDChanging(value);
                ReportPropertyChanging("PO_ID");
                _PO_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PO_ID");
                OnPO_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _PO_ID;
        partial void OnPO_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPO_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> production_ID
        {
            get
            {
                return _production_ID;
            }
            set
            {
                Onproduction_IDChanging(value);
                ReportPropertyChanging("production_ID");
                _production_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("production_ID");
                Onproduction_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _production_ID;
        partial void Onproduction_IDChanging(Nullable<global::System.Int32> value);
        partial void Onproduction_IDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_PO_Item_dbo_POes_PO_ID", "POes")]
        public PO PO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PO>("appdb.FK_dbo_PO_Item_dbo_POes_PO_ID", "POes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PO>("appdb.FK_dbo_PO_Item_dbo_POes_PO_ID", "POes").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PO> POReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PO>("appdb.FK_dbo_PO_Item_dbo_POes_PO_ID", "POes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PO>("appdb.FK_dbo_PO_Item_dbo_POes_PO_ID", "POes", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_PO_Item_dbo_Productions_production_ID", "Productions")]
        public Production Production
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("appdb.FK_dbo_PO_Item_dbo_Productions_production_ID", "Productions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("appdb.FK_dbo_PO_Item_dbo_Productions_production_ID", "Productions").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Production> ProductionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("appdb.FK_dbo_PO_Item_dbo_Productions_production_ID", "Productions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Production>("appdb.FK_dbo_PO_Item_dbo_Productions_production_ID", "Productions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Power")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Power : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Power 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Power CreatePower(global::System.Int32 id, global::System.String name)
        {
            Power power = new Power();
            power.ID = id;
            power.Name = name;
            return power;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Menus_dbo_Powers_ViewPowerID", "Menus")]
        public EntityCollection<Menu> Menus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Menu>("appdb.FK_dbo_Menus_dbo_Powers_ViewPowerID", "Menus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Menu>("appdb.FK_dbo_Menus_dbo_Powers_ViewPowerID", "Menus", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "RolePowers", "Roles")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("appdb.RolePowers", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("appdb.RolePowers", "Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Production")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Production : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Production 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="optdate">optdate 属性的初始值。</param>
        /// <param name="width">width 属性的初始值。</param>
        /// <param name="length">length 属性的初始值。</param>
        public static Production CreateProduction(global::System.Int32 id, global::System.DateTime optdate, global::System.Decimal width, global::System.Decimal length)
        {
            Production production = new Production();
            production.ID = id;
            production.optdate = optdate;
            production.width = width;
            production.length = length;
            return production;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String spec
        {
            get
            {
                return _spec;
            }
            set
            {
                OnspecChanging(value);
                ReportPropertyChanging("spec");
                _spec = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("spec");
                OnspecChanged();
            }
        }
        private global::System.String _spec;
        partial void OnspecChanging(global::System.String value);
        partial void OnspecChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String model
        {
            get
            {
                return _model;
            }
            set
            {
                OnmodelChanging(value);
                ReportPropertyChanging("model");
                _model = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("model");
                OnmodelChanged();
            }
        }
        private global::System.String _model;
        partial void OnmodelChanging(global::System.String value);
        partial void OnmodelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String unit
        {
            get
            {
                return _unit;
            }
            set
            {
                OnunitChanging(value);
                ReportPropertyChanging("unit");
                _unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("unit");
                OnunitChanged();
            }
        }
        private global::System.String _unit;
        partial void OnunitChanging(global::System.String value);
        partial void OnunitChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime optdate
        {
            get
            {
                return _optdate;
            }
            set
            {
                OnoptdateChanging(value);
                ReportPropertyChanging("optdate");
                _optdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("optdate");
                OnoptdateChanged();
            }
        }
        private global::System.DateTime _optdate;
        partial void OnoptdateChanging(global::System.DateTime value);
        partial void OnoptdateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String productCode
        {
            get
            {
                return _productCode;
            }
            set
            {
                OnproductCodeChanging(value);
                ReportPropertyChanging("productCode");
                _productCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("productCode");
                OnproductCodeChanged();
            }
        }
        private global::System.String _productCode;
        partial void OnproductCodeChanging(global::System.String value);
        partial void OnproductCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal width
        {
            get
            {
                return _width;
            }
            set
            {
                OnwidthChanging(value);
                ReportPropertyChanging("width");
                _width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("width");
                OnwidthChanged();
            }
        }
        private global::System.Decimal _width;
        partial void OnwidthChanging(global::System.Decimal value);
        partial void OnwidthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal length
        {
            get
            {
                return _length;
            }
            set
            {
                OnlengthChanging(value);
                ReportPropertyChanging("length");
                _length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("length");
                OnlengthChanged();
            }
        }
        private global::System.Decimal _length;
        partial void OnlengthChanging(global::System.Decimal value);
        partial void OnlengthChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_PO_Item_dbo_Productions_production_ID", "PO_Item")]
        public EntityCollection<PO_Item> PO_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PO_Item>("appdb.FK_dbo_PO_Item_dbo_Productions_production_ID", "PO_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PO_Item>("appdb.FK_dbo_PO_Item_dbo_Productions_production_ID", "PO_Item", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Production_change_dbo_Productions_production_ID", "Production_change")]
        public EntityCollection<Production_change> Production_change
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Production_change>("appdb.FK_dbo_Production_change_dbo_Productions_production_ID", "Production_change");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Production_change>("appdb.FK_dbo_Production_change_dbo_Productions_production_ID", "Production_change", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Production_change")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Production_change : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Production_change 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="price">price 属性的初始值。</param>
        /// <param name="recentlyDate">recentlyDate 属性的初始值。</param>
        public static Production_change CreateProduction_change(global::System.Int32 id, global::System.Decimal price, global::System.DateTime recentlyDate)
        {
            Production_change production_change = new Production_change();
            production_change.ID = id;
            production_change.price = price;
            production_change.recentlyDate = recentlyDate;
            return production_change;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Decimal _price;
        partial void OnpriceChanging(global::System.Decimal value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime recentlyDate
        {
            get
            {
                return _recentlyDate;
            }
            set
            {
                OnrecentlyDateChanging(value);
                ReportPropertyChanging("recentlyDate");
                _recentlyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("recentlyDate");
                OnrecentlyDateChanged();
            }
        }
        private global::System.DateTime _recentlyDate;
        partial void OnrecentlyDateChanging(global::System.DateTime value);
        partial void OnrecentlyDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> production_ID
        {
            get
            {
                return _production_ID;
            }
            set
            {
                Onproduction_IDChanging(value);
                ReportPropertyChanging("production_ID");
                _production_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("production_ID");
                Onproduction_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _production_ID;
        partial void Onproduction_IDChanging(Nullable<global::System.Int32> value);
        partial void Onproduction_IDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Production_change_dbo_Productions_production_ID", "Productions")]
        public Production Production
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("appdb.FK_dbo_Production_change_dbo_Productions_production_ID", "Productions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("appdb.FK_dbo_Production_change_dbo_Productions_production_ID", "Productions").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Production> ProductionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Production>("appdb.FK_dbo_Production_change_dbo_Productions_production_ID", "Productions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Production>("appdb.FK_dbo_Production_change_dbo_Productions_production_ID", "Productions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Provider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Provider : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Provider 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="recentlyDate">recentlyDate 属性的初始值。</param>
        public static Provider CreateProvider(global::System.Int32 id, global::System.DateTime recentlyDate)
        {
            Provider provider = new Provider();
            provider.ID = id;
            provider.recentlyDate = recentlyDate;
            return provider;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String levelCode
        {
            get
            {
                return _levelCode;
            }
            set
            {
                OnlevelCodeChanging(value);
                ReportPropertyChanging("levelCode");
                _levelCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("levelCode");
                OnlevelCodeChanged();
            }
        }
        private global::System.String _levelCode;
        partial void OnlevelCodeChanging(global::System.String value);
        partial void OnlevelCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contact
        {
            get
            {
                return _contact;
            }
            set
            {
                OncontactChanging(value);
                ReportPropertyChanging("contact");
                _contact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contact");
                OncontactChanged();
            }
        }
        private global::System.String _contact;
        partial void OncontactChanging(global::System.String value);
        partial void OncontactChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fax
        {
            get
            {
                return _fax;
            }
            set
            {
                OnfaxChanging(value);
                ReportPropertyChanging("fax");
                _fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fax");
                OnfaxChanged();
            }
        }
        private global::System.String _fax;
        partial void OnfaxChanging(global::System.String value);
        partial void OnfaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eamil
        {
            get
            {
                return _Eamil;
            }
            set
            {
                OnEamilChanging(value);
                ReportPropertyChanging("Eamil");
                _Eamil = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eamil");
                OnEamilChanged();
            }
        }
        private global::System.String _Eamil;
        partial void OnEamilChanging(global::System.String value);
        partial void OnEamilChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bank
        {
            get
            {
                return _bank;
            }
            set
            {
                OnbankChanging(value);
                ReportPropertyChanging("bank");
                _bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bank");
                OnbankChanged();
            }
        }
        private global::System.String _bank;
        partial void OnbankChanging(global::System.String value);
        partial void OnbankChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark1
        {
            get
            {
                return _remark1;
            }
            set
            {
                Onremark1Changing(value);
                ReportPropertyChanging("remark1");
                _remark1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark1");
                Onremark1Changed();
            }
        }
        private global::System.String _remark1;
        partial void Onremark1Changing(global::System.String value);
        partial void Onremark1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark2
        {
            get
            {
                return _remark2;
            }
            set
            {
                Onremark2Changing(value);
                ReportPropertyChanging("remark2");
                _remark2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark2");
                Onremark2Changed();
            }
        }
        private global::System.String _remark2;
        partial void Onremark2Changing(global::System.String value);
        partial void Onremark2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String weChat
        {
            get
            {
                return _weChat;
            }
            set
            {
                OnweChatChanging(value);
                ReportPropertyChanging("weChat");
                _weChat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("weChat");
                OnweChatChanged();
            }
        }
        private global::System.String _weChat;
        partial void OnweChatChanging(global::System.String value);
        partial void OnweChatChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bankPublicName
        {
            get
            {
                return _bankPublicName;
            }
            set
            {
                OnbankPublicNameChanging(value);
                ReportPropertyChanging("bankPublicName");
                _bankPublicName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bankPublicName");
                OnbankPublicNameChanged();
            }
        }
        private global::System.String _bankPublicName;
        partial void OnbankPublicNameChanging(global::System.String value);
        partial void OnbankPublicNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bankPublicAccount
        {
            get
            {
                return _bankPublicAccount;
            }
            set
            {
                OnbankPublicAccountChanging(value);
                ReportPropertyChanging("bankPublicAccount");
                _bankPublicAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bankPublicAccount");
                OnbankPublicAccountChanged();
            }
        }
        private global::System.String _bankPublicAccount;
        partial void OnbankPublicAccountChanging(global::System.String value);
        partial void OnbankPublicAccountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bankPrivateName
        {
            get
            {
                return _bankPrivateName;
            }
            set
            {
                OnbankPrivateNameChanging(value);
                ReportPropertyChanging("bankPrivateName");
                _bankPrivateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bankPrivateName");
                OnbankPrivateNameChanged();
            }
        }
        private global::System.String _bankPrivateName;
        partial void OnbankPrivateNameChanging(global::System.String value);
        partial void OnbankPrivateNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime recentlyDate
        {
            get
            {
                return _recentlyDate;
            }
            set
            {
                OnrecentlyDateChanging(value);
                ReportPropertyChanging("recentlyDate");
                _recentlyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("recentlyDate");
                OnrecentlyDateChanged();
            }
        }
        private global::System.DateTime _recentlyDate;
        partial void OnrecentlyDateChanging(global::System.DateTime value);
        partial void OnrecentlyDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bankPrivateAccount
        {
            get
            {
                return _bankPrivateAccount;
            }
            set
            {
                OnbankPrivateAccountChanging(value);
                ReportPropertyChanging("bankPrivateAccount");
                _bankPrivateAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bankPrivateAccount");
                OnbankPrivateAccountChanged();
            }
        }
        private global::System.String _bankPrivateAccount;
        partial void OnbankPrivateAccountChanging(global::System.String value);
        partial void OnbankPrivateAccountChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_POes_dbo_Providers_provider_ID", "POes")]
        public EntityCollection<PO> POes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PO>("appdb.FK_dbo_POes_dbo_Providers_provider_ID", "POes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PO>("appdb.FK_dbo_POes_dbo_Providers_provider_ID", "POes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="ReimburseClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReimburseClass : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ReimburseClass 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="sortIndex">SortIndex 属性的初始值。</param>
        public static ReimburseClass CreateReimburseClass(global::System.Int32 id, global::System.String name, global::System.Int32 sortIndex)
        {
            ReimburseClass reimburseClass = new ReimburseClass();
            reimburseClass.ID = id;
            reimburseClass.Name = name;
            reimburseClass.SortIndex = sortIndex;
            return reimburseClass;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortIndex
        {
            get
            {
                return _SortIndex;
            }
            set
            {
                OnSortIndexChanging(value);
                ReportPropertyChanging("SortIndex");
                _SortIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortIndex");
                OnSortIndexChanged();
            }
        }
        private global::System.Int32 _SortIndex;
        partial void OnSortIndexChanging(global::System.Int32 value);
        partial void OnSortIndexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parent_ID
        {
            get
            {
                return _Parent_ID;
            }
            set
            {
                OnParent_IDChanging(value);
                ReportPropertyChanging("Parent_ID");
                _Parent_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent_ID");
                OnParent_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Parent_ID;
        partial void OnParent_IDChanging(Nullable<global::System.Int32> value);
        partial void OnParent_IDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_ReimburseClasses_dbo_ReimburseClasses_Parent_ID", "ReimburseClasses1")]
        public EntityCollection<ReimburseClass> ReimburseClasses1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReimburseClass>("appdb.FK_dbo_ReimburseClasses_dbo_ReimburseClasses_Parent_ID", "ReimburseClasses1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReimburseClass>("appdb.FK_dbo_ReimburseClasses_dbo_ReimburseClasses_Parent_ID", "ReimburseClasses1", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_ReimburseClasses_dbo_ReimburseClasses_Parent_ID", "ReimburseClasses")]
        public ReimburseClass ReimburseClass1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReimburseClass>("appdb.FK_dbo_ReimburseClasses_dbo_ReimburseClasses_Parent_ID", "ReimburseClasses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReimburseClass>("appdb.FK_dbo_ReimburseClasses_dbo_ReimburseClasses_Parent_ID", "ReimburseClasses").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReimburseClass> ReimburseClass1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReimburseClass>("appdb.FK_dbo_ReimburseClasses_dbo_ReimburseClasses_Parent_ID", "ReimburseClasses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReimburseClass>("appdb.FK_dbo_ReimburseClasses_dbo_ReimburseClasses_Parent_ID", "ReimburseClasses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Reimbursement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reimbursement : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Reimbursement 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="inputdate">inputdate 属性的初始值。</param>
        /// <param name="interval">interval 属性的初始值。</param>
        /// <param name="price">price 属性的初始值。</param>
        /// <param name="passed">passed 属性的初始值。</param>
        /// <param name="paid">paid 属性的初始值。</param>
        /// <param name="hasInvoice">HasInvoice 属性的初始值。</param>
        public static Reimbursement CreateReimbursement(global::System.Int32 id, global::System.DateTime inputdate, global::System.Int32 interval, global::System.Decimal price, global::System.Boolean passed, global::System.Boolean paid, global::System.Boolean hasInvoice)
        {
            Reimbursement reimbursement = new Reimbursement();
            reimbursement.ID = id;
            reimbursement.inputdate = inputdate;
            reimbursement.interval = interval;
            reimbursement.price = price;
            reimbursement.passed = passed;
            reimbursement.paid = paid;
            reimbursement.HasInvoice = hasInvoice;
            return reimbursement;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime inputdate
        {
            get
            {
                return _inputdate;
            }
            set
            {
                OninputdateChanging(value);
                ReportPropertyChanging("inputdate");
                _inputdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("inputdate");
                OninputdateChanged();
            }
        }
        private global::System.DateTime _inputdate;
        partial void OninputdateChanging(global::System.DateTime value);
        partial void OninputdateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> startDate
        {
            get
            {
                return _startDate;
            }
            set
            {
                OnstartDateChanging(value);
                ReportPropertyChanging("startDate");
                _startDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startDate");
                OnstartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _startDate;
        partial void OnstartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnstartDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> endDate
        {
            get
            {
                return _endDate;
            }
            set
            {
                OnendDateChanging(value);
                ReportPropertyChanging("endDate");
                _endDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endDate");
                OnendDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _endDate;
        partial void OnendDateChanging(Nullable<global::System.DateTime> value);
        partial void OnendDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 interval
        {
            get
            {
                return _interval;
            }
            set
            {
                OnintervalChanging(value);
                ReportPropertyChanging("interval");
                _interval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("interval");
                OnintervalChanged();
            }
        }
        private global::System.Int32 _interval;
        partial void OnintervalChanging(global::System.Int32 value);
        partial void OnintervalChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sheng
        {
            get
            {
                return _sheng;
            }
            set
            {
                OnshengChanging(value);
                ReportPropertyChanging("sheng");
                _sheng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sheng");
                OnshengChanged();
            }
        }
        private global::System.String _sheng;
        partial void OnshengChanging(global::System.String value);
        partial void OnshengChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String shi
        {
            get
            {
                return _shi;
            }
            set
            {
                OnshiChanging(value);
                ReportPropertyChanging("shi");
                _shi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("shi");
                OnshiChanged();
            }
        }
        private global::System.String _shi;
        partial void OnshiChanging(global::System.String value);
        partial void OnshiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String option
        {
            get
            {
                return _option;
            }
            set
            {
                OnoptionChanging(value);
                ReportPropertyChanging("option");
                _option = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("option");
                OnoptionChanged();
            }
        }
        private global::System.String _option;
        partial void OnoptionChanging(global::System.String value);
        partial void OnoptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Decimal _price;
        partial void OnpriceChanging(global::System.Decimal value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> journey
        {
            get
            {
                return _journey;
            }
            set
            {
                OnjourneyChanging(value);
                ReportPropertyChanging("journey");
                _journey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("journey");
                OnjourneyChanged();
            }
        }
        private Nullable<global::System.Decimal> _journey;
        partial void OnjourneyChanging(Nullable<global::System.Decimal> value);
        partial void OnjourneyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark
        {
            get
            {
                return _remark;
            }
            set
            {
                OnremarkChanging(value);
                ReportPropertyChanging("remark");
                _remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark");
                OnremarkChanged();
            }
        }
        private global::System.String _remark;
        partial void OnremarkChanging(global::System.String value);
        partial void OnremarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean passed
        {
            get
            {
                return _passed;
            }
            set
            {
                OnpassedChanging(value);
                ReportPropertyChanging("passed");
                _passed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("passed");
                OnpassedChanged();
            }
        }
        private global::System.Boolean _passed;
        partial void OnpassedChanging(global::System.Boolean value);
        partial void OnpassedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotPassedReason
        {
            get
            {
                return _NotPassedReason;
            }
            set
            {
                OnNotPassedReasonChanging(value);
                ReportPropertyChanging("NotPassedReason");
                _NotPassedReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotPassedReason");
                OnNotPassedReasonChanged();
            }
        }
        private global::System.String _NotPassedReason;
        partial void OnNotPassedReasonChanging(global::System.String value);
        partial void OnNotPassedReasonChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean paid
        {
            get
            {
                return _paid;
            }
            set
            {
                OnpaidChanging(value);
                ReportPropertyChanging("paid");
                _paid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paid");
                OnpaidChanged();
            }
        }
        private global::System.Boolean _paid;
        partial void OnpaidChanging(global::System.Boolean value);
        partial void OnpaidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> telenClient_ID
        {
            get
            {
                return _telenClient_ID;
            }
            set
            {
                OntelenClient_IDChanging(value);
                ReportPropertyChanging("telenClient_ID");
                _telenClient_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("telenClient_ID");
                OntelenClient_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _telenClient_ID;
        partial void OntelenClient_IDChanging(Nullable<global::System.Int32> value);
        partial void OntelenClient_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_ID
        {
            get
            {
                return _user_ID;
            }
            set
            {
                Onuser_IDChanging(value);
                ReportPropertyChanging("user_ID");
                _user_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_ID");
                Onuser_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _user_ID;
        partial void Onuser_IDChanging(Nullable<global::System.Int32> value);
        partial void Onuser_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String class1
        {
            get
            {
                return _class1;
            }
            set
            {
                Onclass1Changing(value);
                ReportPropertyChanging("class1");
                _class1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("class1");
                Onclass1Changed();
            }
        }
        private global::System.String _class1;
        partial void Onclass1Changing(global::System.String value);
        partial void Onclass1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String class2
        {
            get
            {
                return _class2;
            }
            set
            {
                Onclass2Changing(value);
                ReportPropertyChanging("class2");
                _class2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("class2");
                Onclass2Changed();
            }
        }
        private global::System.String _class2;
        partial void Onclass2Changing(global::System.String value);
        partial void Onclass2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReimburseSummary_ID
        {
            get
            {
                return _ReimburseSummary_ID;
            }
            set
            {
                OnReimburseSummary_IDChanging(value);
                ReportPropertyChanging("ReimburseSummary_ID");
                _ReimburseSummary_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReimburseSummary_ID");
                OnReimburseSummary_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReimburseSummary_ID;
        partial void OnReimburseSummary_IDChanging(Nullable<global::System.Int32> value);
        partial void OnReimburseSummary_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractName
        {
            get
            {
                return _ContractName;
            }
            set
            {
                OnContractNameChanging(value);
                ReportPropertyChanging("ContractName");
                _ContractName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContractName");
                OnContractNameChanged();
            }
        }
        private global::System.String _ContractName;
        partial void OnContractNameChanging(global::System.String value);
        partial void OnContractNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasInvoice
        {
            get
            {
                return _HasInvoice;
            }
            set
            {
                OnHasInvoiceChanging(value);
                ReportPropertyChanging("HasInvoice");
                _HasInvoice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasInvoice");
                OnHasInvoiceChanged();
            }
        }
        private global::System.Boolean _HasInvoice;
        partial void OnHasInvoiceChanging(global::System.Boolean value);
        partial void OnHasInvoiceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> paidDate
        {
            get
            {
                return _paidDate;
            }
            set
            {
                OnpaidDateChanging(value);
                ReportPropertyChanging("paidDate");
                _paidDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paidDate");
                OnpaidDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _paidDate;
        partial void OnpaidDateChanging(Nullable<global::System.DateTime> value);
        partial void OnpaidDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Images_dbo_Reimbursements_reimbursement_ID", "Images")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("appdb.FK_dbo_Images_dbo_Reimbursements_reimbursement_ID", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("appdb.FK_dbo_Images_dbo_Reimbursements_reimbursement_ID", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Reimbursements_dbo_ReimburseSummaries_ReimburseSummary_ID", "ReimburseSummaries")]
        public ReimburseSummary ReimburseSummary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReimburseSummary>("appdb.FK_dbo_Reimbursements_dbo_ReimburseSummaries_ReimburseSummary_ID", "ReimburseSummaries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReimburseSummary>("appdb.FK_dbo_Reimbursements_dbo_ReimburseSummaries_ReimburseSummary_ID", "ReimburseSummaries").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReimburseSummary> ReimburseSummaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReimburseSummary>("appdb.FK_dbo_Reimbursements_dbo_ReimburseSummaries_ReimburseSummary_ID", "ReimburseSummaries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReimburseSummary>("appdb.FK_dbo_Reimbursements_dbo_ReimburseSummaries_ReimburseSummary_ID", "ReimburseSummaries", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Reimbursements_dbo_TelenClients_telenClient_ID", "TelenClients")]
        public TelenClient TelenClient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TelenClient>("appdb.FK_dbo_Reimbursements_dbo_TelenClients_telenClient_ID", "TelenClients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TelenClient>("appdb.FK_dbo_Reimbursements_dbo_TelenClients_telenClient_ID", "TelenClients").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TelenClient> TelenClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TelenClient>("appdb.FK_dbo_Reimbursements_dbo_TelenClients_telenClient_ID", "TelenClients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TelenClient>("appdb.FK_dbo_Reimbursements_dbo_TelenClients_telenClient_ID", "TelenClients", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Reimbursements_dbo_Users_user_ID", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("appdb.FK_dbo_Reimbursements_dbo_Users_user_ID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("appdb.FK_dbo_Reimbursements_dbo_Users_user_ID", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("appdb.FK_dbo_Reimbursements_dbo_Users_user_ID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("appdb.FK_dbo_Reimbursements_dbo_Users_user_ID", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="ReimburseSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReimburseSummary : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ReimburseSummary 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="isPassed">isPassed 属性的初始值。</param>
        /// <param name="price">price 属性的初始值。</param>
        /// <param name="hasPay">hasPay 属性的初始值。</param>
        /// <param name="inputDate">InputDate 属性的初始值。</param>
        public static ReimburseSummary CreateReimburseSummary(global::System.Int32 id, global::System.Boolean isPassed, global::System.Single price, global::System.Boolean hasPay, global::System.DateTime inputDate)
        {
            ReimburseSummary reimburseSummary = new ReimburseSummary();
            reimburseSummary.ID = id;
            reimburseSummary.isPassed = isPassed;
            reimburseSummary.price = price;
            reimburseSummary.hasPay = hasPay;
            reimburseSummary.InputDate = inputDate;
            return reimburseSummary;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prosn
        {
            get
            {
                return _prosn;
            }
            set
            {
                OnprosnChanging(value);
                ReportPropertyChanging("prosn");
                _prosn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prosn");
                OnprosnChanged();
            }
        }
        private global::System.String _prosn;
        partial void OnprosnChanging(global::System.String value);
        partial void OnprosnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark
        {
            get
            {
                return _remark;
            }
            set
            {
                OnremarkChanging(value);
                ReportPropertyChanging("remark");
                _remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark");
                OnremarkChanged();
            }
        }
        private global::System.String _remark;
        partial void OnremarkChanging(global::System.String value);
        partial void OnremarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isPassed
        {
            get
            {
                return _isPassed;
            }
            set
            {
                OnisPassedChanging(value);
                ReportPropertyChanging("isPassed");
                _isPassed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isPassed");
                OnisPassedChanged();
            }
        }
        private global::System.Boolean _isPassed;
        partial void OnisPassedChanging(global::System.Boolean value);
        partial void OnisPassedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> journey
        {
            get
            {
                return _journey;
            }
            set
            {
                OnjourneyChanging(value);
                ReportPropertyChanging("journey");
                _journey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("journey");
                OnjourneyChanged();
            }
        }
        private Nullable<global::System.Single> _journey;
        partial void OnjourneyChanging(Nullable<global::System.Single> value);
        partial void OnjourneyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Single _price;
        partial void OnpriceChanging(global::System.Single value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean hasPay
        {
            get
            {
                return _hasPay;
            }
            set
            {
                OnhasPayChanging(value);
                ReportPropertyChanging("hasPay");
                _hasPay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hasPay");
                OnhasPayChanged();
            }
        }
        private global::System.Boolean _hasPay;
        partial void OnhasPayChanging(global::System.Boolean value);
        partial void OnhasPayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InputDate
        {
            get
            {
                return _InputDate;
            }
            set
            {
                OnInputDateChanging(value);
                ReportPropertyChanging("InputDate");
                _InputDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputDate");
                OnInputDateChanged();
            }
        }
        private global::System.DateTime _InputDate;
        partial void OnInputDateChanging(global::System.DateTime value);
        partial void OnInputDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_ID
        {
            get
            {
                return _user_ID;
            }
            set
            {
                Onuser_IDChanging(value);
                ReportPropertyChanging("user_ID");
                _user_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_ID");
                Onuser_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _user_ID;
        partial void Onuser_IDChanging(Nullable<global::System.Int32> value);
        partial void Onuser_IDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Reimbursements_dbo_ReimburseSummaries_ReimburseSummary_ID", "Reimbursements")]
        public EntityCollection<Reimbursement> Reimbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reimbursement>("appdb.FK_dbo_Reimbursements_dbo_ReimburseSummaries_ReimburseSummary_ID", "Reimbursements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reimbursement>("appdb.FK_dbo_Reimbursements_dbo_ReimburseSummaries_ReimburseSummary_ID", "Reimbursements", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_ReimburseSummaries_dbo_Users_user_ID", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("appdb.FK_dbo_ReimburseSummaries_dbo_Users_user_ID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("appdb.FK_dbo_ReimburseSummaries_dbo_Users_user_ID", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("appdb.FK_dbo_ReimburseSummaries_dbo_Users_user_ID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("appdb.FK_dbo_ReimburseSummaries_dbo_Users_user_ID", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Role 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name)
        {
            Role role = new Role();
            role.ID = id;
            role.Name = name;
            return role;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "RolePowers", "Powers")]
        public EntityCollection<Power> Powers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Power>("appdb.RolePowers", "Powers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Power>("appdb.RolePowers", "Powers", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "RoleUsers", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("appdb.RoleUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("appdb.RoleUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="TelenClient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TelenClient : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TelenClient 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static TelenClient CreateTelenClient(global::System.Int32 id)
        {
            TelenClient telenClient = new TelenClient();
            telenClient.ID = id;
            return telenClient;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String levelCode
        {
            get
            {
                return _levelCode;
            }
            set
            {
                OnlevelCodeChanging(value);
                ReportPropertyChanging("levelCode");
                _levelCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("levelCode");
                OnlevelCodeChanged();
            }
        }
        private global::System.String _levelCode;
        partial void OnlevelCodeChanging(global::System.String value);
        partial void OnlevelCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> serverTime
        {
            get
            {
                return _serverTime;
            }
            set
            {
                OnserverTimeChanging(value);
                ReportPropertyChanging("serverTime");
                _serverTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serverTime");
                OnserverTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _serverTime;
        partial void OnserverTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnserverTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String condiction
        {
            get
            {
                return _condiction;
            }
            set
            {
                OncondictionChanging(value);
                ReportPropertyChanging("condiction");
                _condiction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("condiction");
                OncondictionChanged();
            }
        }
        private global::System.String _condiction;
        partial void OncondictionChanging(global::System.String value);
        partial void OncondictionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark
        {
            get
            {
                return _remark;
            }
            set
            {
                OnremarkChanging(value);
                ReportPropertyChanging("remark");
                _remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark");
                OnremarkChanged();
            }
        }
        private global::System.String _remark;
        partial void OnremarkChanging(global::System.String value);
        partial void OnremarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fax
        {
            get
            {
                return _fax;
            }
            set
            {
                OnfaxChanging(value);
                ReportPropertyChanging("fax");
                _fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fax");
                OnfaxChanged();
            }
        }
        private global::System.String _fax;
        partial void OnfaxChanging(global::System.String value);
        partial void OnfaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bank
        {
            get
            {
                return _bank;
            }
            set
            {
                OnbankChanging(value);
                ReportPropertyChanging("bank");
                _bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bank");
                OnbankChanged();
            }
        }
        private global::System.String _bank;
        partial void OnbankChanging(global::System.String value);
        partial void OnbankChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Eamil
        {
            get
            {
                return _Eamil;
            }
            set
            {
                OnEamilChanging(value);
                ReportPropertyChanging("Eamil");
                _Eamil = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Eamil");
                OnEamilChanged();
            }
        }
        private global::System.String _Eamil;
        partial void OnEamilChanging(global::System.String value);
        partial void OnEamilChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String clientManager
        {
            get
            {
                return _clientManager;
            }
            set
            {
                OnclientManagerChanging(value);
                ReportPropertyChanging("clientManager");
                _clientManager = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("clientManager");
                OnclientManagerChanged();
            }
        }
        private global::System.String _clientManager;
        partial void OnclientManagerChanging(global::System.String value);
        partial void OnclientManagerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String implementer
        {
            get
            {
                return _implementer;
            }
            set
            {
                OnimplementerChanging(value);
                ReportPropertyChanging("implementer");
                _implementer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("implementer");
                OnimplementerChanged();
            }
        }
        private global::System.String _implementer;
        partial void OnimplementerChanging(global::System.String value);
        partial void OnimplementerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gendan
        {
            get
            {
                return _gendan;
            }
            set
            {
                OngendanChanging(value);
                ReportPropertyChanging("gendan");
                _gendan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gendan");
                OngendanChanged();
            }
        }
        private global::System.String _gendan;
        partial void OngendanChanging(global::System.String value);
        partial void OngendanChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Reimbursements_dbo_TelenClients_telenClient_ID", "Reimbursements")]
        public EntityCollection<Reimbursement> Reimbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reimbursement>("appdb.FK_dbo_Reimbursements_dbo_TelenClients_telenClient_ID", "Reimbursements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reimbursement>("appdb.FK_dbo_Reimbursements_dbo_TelenClients_telenClient_ID", "Reimbursements", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Terminal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Terminal : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Terminal 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="optdate">optdate 属性的初始值。</param>
        public static Terminal CreateTerminal(global::System.Int32 id, global::System.DateTime optdate)
        {
            Terminal terminal = new Terminal();
            terminal.ID = id;
            terminal.optdate = optdate;
            return terminal;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itemname
        {
            get
            {
                return _itemname;
            }
            set
            {
                OnitemnameChanging(value);
                ReportPropertyChanging("itemname");
                _itemname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("itemname");
                OnitemnameChanged();
            }
        }
        private global::System.String _itemname;
        partial void OnitemnameChanging(global::System.String value);
        partial void OnitemnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String operater
        {
            get
            {
                return _operater;
            }
            set
            {
                OnoperaterChanging(value);
                ReportPropertyChanging("operater");
                _operater = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("operater");
                OnoperaterChanged();
            }
        }
        private global::System.String _operater;
        partial void OnoperaterChanging(global::System.String value);
        partial void OnoperaterChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime optdate
        {
            get
            {
                return _optdate;
            }
            set
            {
                OnoptdateChanging(value);
                ReportPropertyChanging("optdate");
                _optdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("optdate");
                OnoptdateChanged();
            }
        }
        private global::System.DateTime _optdate;
        partial void OnoptdateChanging(global::System.DateTime value);
        partial void OnoptdateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private Nullable<global::System.Int32> _quantity;
        partial void OnquantityChanging(Nullable<global::System.Int32> value);
        partial void OnquantityChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_TerminalLists_dbo_Terminals_terminal_ID", "TerminalLists")]
        public EntityCollection<TerminalList> TerminalLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TerminalList>("appdb.FK_dbo_TerminalLists_dbo_Terminals_terminal_ID", "TerminalLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TerminalList>("appdb.FK_dbo_TerminalLists_dbo_Terminals_terminal_ID", "TerminalLists", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="TerminalList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TerminalList : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TerminalList 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="count">count 属性的初始值。</param>
        public static TerminalList CreateTerminalList(global::System.Int32 id, global::System.Int32 count)
        {
            TerminalList terminalList = new TerminalList();
            terminalList.ID = id;
            terminalList.count = count;
            return terminalList;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itemname
        {
            get
            {
                return _itemname;
            }
            set
            {
                OnitemnameChanging(value);
                ReportPropertyChanging("itemname");
                _itemname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("itemname");
                OnitemnameChanged();
            }
        }
        private global::System.String _itemname;
        partial void OnitemnameChanging(global::System.String value);
        partial void OnitemnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String spec
        {
            get
            {
                return _spec;
            }
            set
            {
                OnspecChanging(value);
                ReportPropertyChanging("spec");
                _spec = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("spec");
                OnspecChanged();
            }
        }
        private global::System.String _spec;
        partial void OnspecChanging(global::System.String value);
        partial void OnspecChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String provider
        {
            get
            {
                return _provider;
            }
            set
            {
                OnproviderChanging(value);
                ReportPropertyChanging("provider");
                _provider = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("provider");
                OnproviderChanged();
            }
        }
        private global::System.String _provider;
        partial void OnproviderChanging(global::System.String value);
        partial void OnproviderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String image
        {
            get
            {
                return _image;
            }
            set
            {
                OnimageChanging(value);
                ReportPropertyChanging("image");
                _image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("image");
                OnimageChanged();
            }
        }
        private global::System.String _image;
        partial void OnimageChanging(global::System.String value);
        partial void OnimageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 count
        {
            get
            {
                return _count;
            }
            set
            {
                OncountChanging(value);
                ReportPropertyChanging("count");
                _count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("count");
                OncountChanged();
            }
        }
        private global::System.Int32 _count;
        partial void OncountChanging(global::System.Int32 value);
        partial void OncountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> terminal_ID
        {
            get
            {
                return _terminal_ID;
            }
            set
            {
                Onterminal_IDChanging(value);
                ReportPropertyChanging("terminal_ID");
                _terminal_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("terminal_ID");
                Onterminal_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _terminal_ID;
        partial void Onterminal_IDChanging(Nullable<global::System.Int32> value);
        partial void Onterminal_IDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_TerminalLists_dbo_Terminals_terminal_ID", "Terminals")]
        public Terminal Terminal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Terminal>("appdb.FK_dbo_TerminalLists_dbo_Terminals_terminal_ID", "Terminals").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Terminal>("appdb.FK_dbo_TerminalLists_dbo_Terminals_terminal_ID", "Terminals").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Terminal> TerminalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Terminal>("appdb.FK_dbo_TerminalLists_dbo_Terminals_terminal_ID", "Terminals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Terminal>("appdb.FK_dbo_TerminalLists_dbo_Terminals_terminal_ID", "Terminals", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_TerminalProcessRecs_dbo_TerminalLists_TerminalList_ID", "TerminalProcessRecs")]
        public EntityCollection<TerminalProcessRec> TerminalProcessRecs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TerminalProcessRec>("appdb.FK_dbo_TerminalProcessRecs_dbo_TerminalLists_TerminalList_ID", "TerminalProcessRecs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TerminalProcessRec>("appdb.FK_dbo_TerminalProcessRecs_dbo_TerminalLists_TerminalList_ID", "TerminalProcessRecs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="TerminalProcessRec")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TerminalProcessRec : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TerminalProcessRec 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="optdate">optdate 属性的初始值。</param>
        /// <param name="quantity">quantity 属性的初始值。</param>
        public static TerminalProcessRec CreateTerminalProcessRec(global::System.Int32 id, global::System.DateTime optdate, global::System.Int32 quantity)
        {
            TerminalProcessRec terminalProcessRec = new TerminalProcessRec();
            terminalProcessRec.ID = id;
            terminalProcessRec.optdate = optdate;
            terminalProcessRec.quantity = quantity;
            return terminalProcessRec;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itemname
        {
            get
            {
                return _itemname;
            }
            set
            {
                OnitemnameChanging(value);
                ReportPropertyChanging("itemname");
                _itemname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("itemname");
                OnitemnameChanged();
            }
        }
        private global::System.String _itemname;
        partial void OnitemnameChanging(global::System.String value);
        partial void OnitemnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String processno
        {
            get
            {
                return _processno;
            }
            set
            {
                OnprocessnoChanging(value);
                ReportPropertyChanging("processno");
                _processno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("processno");
                OnprocessnoChanged();
            }
        }
        private global::System.String _processno;
        partial void OnprocessnoChanging(global::System.String value);
        partial void OnprocessnoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime optdate
        {
            get
            {
                return _optdate;
            }
            set
            {
                OnoptdateChanging(value);
                ReportPropertyChanging("optdate");
                _optdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("optdate");
                OnoptdateChanged();
            }
        }
        private global::System.DateTime _optdate;
        partial void OnoptdateChanging(global::System.DateTime value);
        partial void OnoptdateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String operater
        {
            get
            {
                return _operater;
            }
            set
            {
                OnoperaterChanging(value);
                ReportPropertyChanging("operater");
                _operater = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("operater");
                OnoperaterChanged();
            }
        }
        private global::System.String _operater;
        partial void OnoperaterChanging(global::System.String value);
        partial void OnoperaterChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private global::System.Int32 _quantity;
        partial void OnquantityChanging(global::System.Int32 value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark
        {
            get
            {
                return _remark;
            }
            set
            {
                OnremarkChanging(value);
                ReportPropertyChanging("remark");
                _remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark");
                OnremarkChanged();
            }
        }
        private global::System.String _remark;
        partial void OnremarkChanging(global::System.String value);
        partial void OnremarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TerminalList_ID
        {
            get
            {
                return _TerminalList_ID;
            }
            set
            {
                OnTerminalList_IDChanging(value);
                ReportPropertyChanging("TerminalList_ID");
                _TerminalList_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerminalList_ID");
                OnTerminalList_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _TerminalList_ID;
        partial void OnTerminalList_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTerminalList_IDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_TerminalProcessRecs_dbo_TerminalLists_TerminalList_ID", "TerminalLists")]
        public TerminalList TerminalList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TerminalList>("appdb.FK_dbo_TerminalProcessRecs_dbo_TerminalLists_TerminalList_ID", "TerminalLists").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TerminalList>("appdb.FK_dbo_TerminalProcessRecs_dbo_TerminalLists_TerminalList_ID", "TerminalLists").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TerminalList> TerminalListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TerminalList>("appdb.FK_dbo_TerminalProcessRecs_dbo_TerminalLists_TerminalList_ID", "TerminalLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TerminalList>("appdb.FK_dbo_TerminalProcessRecs_dbo_TerminalLists_TerminalList_ID", "TerminalLists", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Title 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Title CreateTitle(global::System.Int32 id, global::System.String name)
        {
            Title title = new Title();
            title.ID = id;
            title.Name = name;
            return title;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "TitleUsers", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("appdb.TitleUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("appdb.TitleUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="email">Email 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="enabled">Enabled 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.String email, global::System.String password, global::System.Boolean enabled)
        {
            User user = new User();
            user.ID = id;
            user.Name = name;
            user.Email = email;
            user.Password = password;
            user.Enabled = enabled;
            return user;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChineseName
        {
            get
            {
                return _ChineseName;
            }
            set
            {
                OnChineseNameChanging(value);
                ReportPropertyChanging("ChineseName");
                _ChineseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChineseName");
                OnChineseNameChanged();
            }
        }
        private global::System.String _ChineseName;
        partial void OnChineseNameChanging(global::System.String value);
        partial void OnChineseNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnglishName
        {
            get
            {
                return _EnglishName;
            }
            set
            {
                OnEnglishNameChanging(value);
                ReportPropertyChanging("EnglishName");
                _EnglishName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnglishName");
                OnEnglishNameChanged();
            }
        }
        private global::System.String _EnglishName;
        partial void OnEnglishNameChanging(global::System.String value);
        partial void OnEnglishNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Photo
        {
            get
            {
                return _Photo;
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.String _Photo;
        partial void OnPhotoChanging(global::System.String value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QQ
        {
            get
            {
                return _QQ;
            }
            set
            {
                OnQQChanging(value);
                ReportPropertyChanging("QQ");
                _QQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QQ");
                OnQQChanged();
            }
        }
        private global::System.String _QQ;
        partial void OnQQChanging(global::System.String value);
        partial void OnQQChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyEmail
        {
            get
            {
                return _CompanyEmail;
            }
            set
            {
                OnCompanyEmailChanging(value);
                ReportPropertyChanging("CompanyEmail");
                _CompanyEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyEmail");
                OnCompanyEmailChanged();
            }
        }
        private global::System.String _CompanyEmail;
        partial void OnCompanyEmailChanging(global::System.String value);
        partial void OnCompanyEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficePhone
        {
            get
            {
                return _OfficePhone;
            }
            set
            {
                OnOfficePhoneChanging(value);
                ReportPropertyChanging("OfficePhone");
                _OfficePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficePhone");
                OnOfficePhoneChanged();
            }
        }
        private global::System.String _OfficePhone;
        partial void OnOfficePhoneChanging(global::System.String value);
        partial void OnOfficePhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficePhoneExt
        {
            get
            {
                return _OfficePhoneExt;
            }
            set
            {
                OnOfficePhoneExtChanging(value);
                ReportPropertyChanging("OfficePhoneExt");
                _OfficePhoneExt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficePhoneExt");
                OnOfficePhoneExtChanged();
            }
        }
        private global::System.String _OfficePhoneExt;
        partial void OnOfficePhoneExtChanging(global::System.String value);
        partial void OnOfficePhoneExtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellPhone
        {
            get
            {
                return _CellPhone;
            }
            set
            {
                OnCellPhoneChanging(value);
                ReportPropertyChanging("CellPhone");
                _CellPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellPhone");
                OnCellPhoneChanged();
            }
        }
        private global::System.String _CellPhone;
        partial void OnCellPhoneChanging(global::System.String value);
        partial void OnCellPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdentityCard
        {
            get
            {
                return _IdentityCard;
            }
            set
            {
                OnIdentityCardChanging(value);
                ReportPropertyChanging("IdentityCard");
                _IdentityCard = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdentityCard");
                OnIdentityCardChanged();
            }
        }
        private global::System.String _IdentityCard;
        partial void OnIdentityCardChanging(global::System.String value);
        partial void OnIdentityCardChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TakeOfficeTime
        {
            get
            {
                return _TakeOfficeTime;
            }
            set
            {
                OnTakeOfficeTimeChanging(value);
                ReportPropertyChanging("TakeOfficeTime");
                _TakeOfficeTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TakeOfficeTime");
                OnTakeOfficeTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _TakeOfficeTime;
        partial void OnTakeOfficeTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTakeOfficeTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginTime
        {
            get
            {
                return _LastLoginTime;
            }
            set
            {
                OnLastLoginTimeChanging(value);
                ReportPropertyChanging("LastLoginTime");
                _LastLoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginTime");
                OnLastLoginTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginTime;
        partial void OnLastLoginTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                OnDeptIDChanging(value);
                ReportPropertyChanging("DeptID");
                _DeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptID");
                OnDeptIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DeptID;
        partial void OnDeptIDChanging(Nullable<global::System.Int32> value);
        partial void OnDeptIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Users_dbo_Depts_DeptID", "Depts")]
        public Dept Dept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("appdb.FK_dbo_Users_dbo_Depts_DeptID", "Depts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("appdb.FK_dbo_Users_dbo_Depts_DeptID", "Depts").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dept> DeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("appdb.FK_dbo_Users_dbo_Depts_DeptID", "Depts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dept>("appdb.FK_dbo_Users_dbo_Depts_DeptID", "Depts", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Onlines_dbo_Users_UserID", "Onlines")]
        public EntityCollection<Online> Onlines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Online>("appdb.FK_dbo_Onlines_dbo_Users_UserID", "Onlines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Online>("appdb.FK_dbo_Onlines_dbo_Users_UserID", "Onlines", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_Reimbursements_dbo_Users_user_ID", "Reimbursements")]
        public EntityCollection<Reimbursement> Reimbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reimbursement>("appdb.FK_dbo_Reimbursements_dbo_Users_user_ID", "Reimbursements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reimbursement>("appdb.FK_dbo_Reimbursements_dbo_Users_user_ID", "Reimbursements", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "FK_dbo_ReimburseSummaries_dbo_Users_user_ID", "ReimburseSummaries")]
        public EntityCollection<ReimburseSummary> ReimburseSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReimburseSummary>("appdb.FK_dbo_ReimburseSummaries_dbo_Users_user_ID", "ReimburseSummaries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReimburseSummary>("appdb.FK_dbo_ReimburseSummaries_dbo_Users_user_ID", "ReimburseSummaries", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "RoleUsers", "Roles")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("appdb.RoleUsers", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("appdb.RoleUsers", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("appdb", "TitleUsers", "Titles")]
        public EntityCollection<Title> Titles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Title>("appdb.TitleUsers", "Titles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Title>("appdb.TitleUsers", "Titles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="YW_Lableinfor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class YW_Lableinfor : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 YW_Lableinfor 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static YW_Lableinfor CreateYW_Lableinfor(global::System.Int32 id)
        {
            YW_Lableinfor yW_Lableinfor = new YW_Lableinfor();
            yW_Lableinfor.ID = id;
            return yW_Lableinfor;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prosn
        {
            get
            {
                return _prosn;
            }
            set
            {
                OnprosnChanging(value);
                ReportPropertyChanging("prosn");
                _prosn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prosn");
                OnprosnChanged();
            }
        }
        private global::System.String _prosn;
        partial void OnprosnChanging(global::System.String value);
        partial void OnprosnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String proname
        {
            get
            {
                return _proname;
            }
            set
            {
                OnpronameChanging(value);
                ReportPropertyChanging("proname");
                _proname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("proname");
                OnpronameChanged();
            }
        }
        private global::System.String _proname;
        partial void OnpronameChanging(global::System.String value);
        partial void OnpronameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String spec
        {
            get
            {
                return _spec;
            }
            set
            {
                OnspecChanging(value);
                ReportPropertyChanging("spec");
                _spec = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("spec");
                OnspecChanged();
            }
        }
        private global::System.String _spec;
        partial void OnspecChanging(global::System.String value);
        partial void OnspecChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String class1
        {
            get
            {
                return _class1;
            }
            set
            {
                Onclass1Changing(value);
                ReportPropertyChanging("class1");
                _class1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("class1");
                Onclass1Changed();
            }
        }
        private global::System.String _class1;
        partial void Onclass1Changing(global::System.String value);
        partial void Onclass1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String class2
        {
            get
            {
                return _class2;
            }
            set
            {
                Onclass2Changing(value);
                ReportPropertyChanging("class2");
                _class2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("class2");
                Onclass2Changed();
            }
        }
        private global::System.String _class2;
        partial void Onclass2Changing(global::System.String value);
        partial void Onclass2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String caseno
        {
            get
            {
                return _caseno;
            }
            set
            {
                OncasenoChanging(value);
                ReportPropertyChanging("caseno");
                _caseno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("caseno");
                OncasenoChanged();
            }
        }
        private global::System.String _caseno;
        partial void OncasenoChanging(global::System.String value);
        partial void OncasenoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> isreturn
        {
            get
            {
                return _isreturn;
            }
            set
            {
                OnisreturnChanging(value);
                ReportPropertyChanging("isreturn");
                _isreturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isreturn");
                OnisreturnChanged();
            }
        }
        private Nullable<global::System.Int32> _isreturn;
        partial void OnisreturnChanging(Nullable<global::System.Int32> value);
        partial void OnisreturnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private Nullable<global::System.Double> _weight;
        partial void OnweightChanging(Nullable<global::System.Double> value);
        partial void OnweightChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String operater
        {
            get
            {
                return _operater;
            }
            set
            {
                OnoperaterChanging(value);
                ReportPropertyChanging("operater");
                _operater = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("operater");
                OnoperaterChanged();
            }
        }
        private global::System.String _operater;
        partial void OnoperaterChanging(global::System.String value);
        partial void OnoperaterChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark
        {
            get
            {
                return _remark;
            }
            set
            {
                OnremarkChanging(value);
                ReportPropertyChanging("remark");
                _remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark");
                OnremarkChanged();
            }
        }
        private global::System.String _remark;
        partial void OnremarkChanging(global::System.String value);
        partial void OnremarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> kaidandate
        {
            get
            {
                return _kaidandate;
            }
            set
            {
                OnkaidandateChanging(value);
                ReportPropertyChanging("kaidandate");
                _kaidandate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("kaidandate");
                OnkaidandateChanged();
            }
        }
        private Nullable<global::System.DateTime> _kaidandate;
        partial void OnkaidandateChanging(Nullable<global::System.DateTime> value);
        partial void OnkaidandateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private Nullable<global::System.Double> _quantity;
        partial void OnquantityChanging(Nullable<global::System.Double> value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String projectno
        {
            get
            {
                return _projectno;
            }
            set
            {
                OnprojectnoChanging(value);
                ReportPropertyChanging("projectno");
                _projectno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("projectno");
                OnprojectnoChanged();
            }
        }
        private global::System.String _projectno;
        partial void OnprojectnoChanging(global::System.String value);
        partial void OnprojectnoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String projectname
        {
            get
            {
                return _projectname;
            }
            set
            {
                OnprojectnameChanging(value);
                ReportPropertyChanging("projectname");
                _projectname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("projectname");
                OnprojectnameChanged();
            }
        }
        private global::System.String _projectname;
        partial void OnprojectnameChanging(global::System.String value);
        partial void OnprojectnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String procompany
        {
            get
            {
                return _procompany;
            }
            set
            {
                OnprocompanyChanging(value);
                ReportPropertyChanging("procompany");
                _procompany = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("procompany");
                OnprocompanyChanged();
            }
        }
        private global::System.String _procompany;
        partial void OnprocompanyChanging(global::System.String value);
        partial void OnprocompanyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pid
        {
            get
            {
                return _pid;
            }
            set
            {
                OnpidChanging(value);
                ReportPropertyChanging("pid");
                _pid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pid");
                OnpidChanged();
            }
        }
        private global::System.String _pid;
        partial void OnpidChanging(global::System.String value);
        partial void OnpidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String alias
        {
            get
            {
                return _alias;
            }
            set
            {
                OnaliasChanging(value);
                ReportPropertyChanging("alias");
                _alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("alias");
                OnaliasChanged();
            }
        }
        private global::System.String _alias;
        partial void OnaliasChanging(global::System.String value);
        partial void OnaliasChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="appdb", Name="YW_ProcessRec")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class YW_ProcessRec : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 YW_ProcessRec 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static YW_ProcessRec CreateYW_ProcessRec(global::System.Int32 id)
        {
            YW_ProcessRec yW_ProcessRec = new YW_ProcessRec();
            yW_ProcessRec.ID = id;
            return yW_ProcessRec;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prosn
        {
            get
            {
                return _prosn;
            }
            set
            {
                OnprosnChanging(value);
                ReportPropertyChanging("prosn");
                _prosn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prosn");
                OnprosnChanged();
            }
        }
        private global::System.String _prosn;
        partial void OnprosnChanging(global::System.String value);
        partial void OnprosnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> optdate
        {
            get
            {
                return _optdate;
            }
            set
            {
                OnoptdateChanging(value);
                ReportPropertyChanging("optdate");
                _optdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("optdate");
                OnoptdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _optdate;
        partial void OnoptdateChanging(Nullable<global::System.DateTime> value);
        partial void OnoptdateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String processno
        {
            get
            {
                return _processno;
            }
            set
            {
                OnprocessnoChanging(value);
                ReportPropertyChanging("processno");
                _processno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("processno");
                OnprocessnoChanged();
            }
        }
        private global::System.String _processno;
        partial void OnprocessnoChanging(global::System.String value);
        partial void OnprocessnoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billno
        {
            get
            {
                return _billno;
            }
            set
            {
                OnbillnoChanging(value);
                ReportPropertyChanging("billno");
                _billno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billno");
                OnbillnoChanged();
            }
        }
        private global::System.String _billno;
        partial void OnbillnoChanging(global::System.String value);
        partial void OnbillnoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String jingbanren
        {
            get
            {
                return _jingbanren;
            }
            set
            {
                OnjingbanrenChanging(value);
                ReportPropertyChanging("jingbanren");
                _jingbanren = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("jingbanren");
                OnjingbanrenChanged();
            }
        }
        private global::System.String _jingbanren;
        partial void OnjingbanrenChanging(global::System.String value);
        partial void OnjingbanrenChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String jianshu
        {
            get
            {
                return _jianshu;
            }
            set
            {
                OnjianshuChanging(value);
                ReportPropertyChanging("jianshu");
                _jianshu = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("jianshu");
                OnjianshuChanged();
            }
        }
        private global::System.String _jianshu;
        partial void OnjianshuChanging(global::System.String value);
        partial void OnjianshuChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lotno
        {
            get
            {
                return _lotno;
            }
            set
            {
                OnlotnoChanging(value);
                ReportPropertyChanging("lotno");
                _lotno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lotno");
                OnlotnoChanged();
            }
        }
        private global::System.String _lotno;
        partial void OnlotnoChanging(global::System.String value);
        partial void OnlotnoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark
        {
            get
            {
                return _remark;
            }
            set
            {
                OnremarkChanging(value);
                ReportPropertyChanging("remark");
                _remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark");
                OnremarkChanged();
            }
        }
        private global::System.String _remark;
        partial void OnremarkChanging(global::System.String value);
        partial void OnremarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String caseno
        {
            get
            {
                return _caseno;
            }
            set
            {
                OncasenoChanging(value);
                ReportPropertyChanging("caseno");
                _caseno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("caseno");
                OncasenoChanged();
            }
        }
        private global::System.String _caseno;
        partial void OncasenoChanging(global::System.String value);
        partial void OncasenoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pihao
        {
            get
            {
                return _pihao;
            }
            set
            {
                OnpihaoChanging(value);
                ReportPropertyChanging("pihao");
                _pihao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pihao");
                OnpihaoChanged();
            }
        }
        private global::System.String _pihao;
        partial void OnpihaoChanging(global::System.String value);
        partial void OnpihaoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private Nullable<global::System.Double> _quantity;
        partial void OnquantityChanging(Nullable<global::System.Double> value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> pid
        {
            get
            {
                return _pid;
            }
            set
            {
                OnpidChanging(value);
                ReportPropertyChanging("pid");
                _pid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pid");
                OnpidChanged();
            }
        }
        private Nullable<global::System.Int32> _pid;
        partial void OnpidChanging(Nullable<global::System.Int32> value);
        partial void OnpidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> flag
        {
            get
            {
                return _flag;
            }
            set
            {
                OnflagChanging(value);
                ReportPropertyChanging("flag");
                _flag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("flag");
                OnflagChanged();
            }
        }
        private Nullable<global::System.Int32> _flag;
        partial void OnflagChanging(Nullable<global::System.Int32> value);
        partial void OnflagChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> printlabel
        {
            get
            {
                return _printlabel;
            }
            set
            {
                OnprintlabelChanging(value);
                ReportPropertyChanging("printlabel");
                _printlabel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("printlabel");
                OnprintlabelChanged();
            }
        }
        private Nullable<global::System.Int32> _printlabel;
        partial void OnprintlabelChanging(Nullable<global::System.Int32> value);
        partial void OnprintlabelChanged();

        #endregion

    
    }

    #endregion

    
}
